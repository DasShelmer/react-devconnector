[{"C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\index.js":"1","C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\App.js":"2","C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\components\\layout\\Navbar.js":"3","C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\components\\layout\\Landing.js":"4","C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\components\\auth\\Login.js":"5","C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\components\\auth\\Register.js":"6","C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\store.js":"7","C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\reducers\\index.js":"8","C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\reducers\\alert.js":"9","C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\actions\\types.js":"10","C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\actions\\alert.js":"11","C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\components\\layout\\Alert.js":"12","C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\actions\\auth.js":"13","C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\reducers\\auth.js":"14","C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\utils\\setAuthToken.js":"15","C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\components\\dashboard\\Dashboard.js":"16","C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\components\\routing\\PrivateRoute.js":"17","C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\reducers\\profile.js":"18","C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\actions\\profile.js":"19","C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\components\\layout\\Spinner.js":"20","C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\components\\profile-forms\\CreateProfile.js":"21","C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\components\\dashboard\\DashboardAction.js":"22","C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\components\\profile-forms\\EditProfile.js":"23","C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\components\\profile-forms\\AddExperience.js":"24","C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\components\\profile-forms\\AddEducation.js":"25"},{"size":207,"mtime":1612428303587,"results":"26","hashOfConfig":"27"},{"size":2318,"mtime":1612437766367,"results":"28","hashOfConfig":"27"},{"size":1470,"mtime":1612428303581,"results":"29","hashOfConfig":"27"},{"size":1151,"mtime":1612428303581,"results":"30","hashOfConfig":"27"},{"size":1986,"mtime":1612428303578,"results":"31","hashOfConfig":"27"},{"size":3224,"mtime":1612428303579,"results":"32","hashOfConfig":"27"},{"size":400,"mtime":1612428303592,"results":"33","hashOfConfig":"27"},{"size":205,"mtime":1612428303590,"results":"34","hashOfConfig":"27"},{"size":391,"mtime":1612428303589,"results":"35","hashOfConfig":"27"},{"size":585,"mtime":1612435702943,"results":"36","hashOfConfig":"27"},{"size":357,"mtime":1612428303575,"results":"37","hashOfConfig":"27"},{"size":506,"mtime":1612428303580,"results":"38","hashOfConfig":"27"},{"size":2069,"mtime":1612428303576,"results":"39","hashOfConfig":"27"},{"size":1074,"mtime":1612428303589,"results":"40","hashOfConfig":"27"},{"size":253,"mtime":1612428303594,"results":"41","hashOfConfig":"27"},{"size":1462,"mtime":1612433057297,"results":"42","hashOfConfig":"27"},{"size":623,"mtime":1612428303583,"results":"43","hashOfConfig":"27"},{"size":780,"mtime":1612435954804,"results":"44","hashOfConfig":"27"},{"size":2872,"mtime":1612436903752,"results":"45","hashOfConfig":"27"},{"size":330,"mtime":1612428303582,"results":"46","hashOfConfig":"27"},{"size":7039,"mtime":1612435543946,"results":"47","hashOfConfig":"27"},{"size":661,"mtime":1612434839510,"results":"48","hashOfConfig":"27"},{"size":8303,"mtime":1612435555399,"results":"49","hashOfConfig":"27"},{"size":3486,"mtime":1612438084735,"results":"50","hashOfConfig":"27"},{"size":3542,"mtime":1612438075621,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gdpchd",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\index.js",[],"C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\App.js",[],"C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\components\\layout\\Navbar.js",[],["108","109"],"C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\components\\layout\\Landing.js",[],"C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\components\\auth\\Login.js",[],"C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\store.js",[],"C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\reducers\\index.js",[],"C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\reducers\\alert.js",["110"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\actions\\types.js",[],"C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\actions\\alert.js",[],"C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\actions\\auth.js",[],"C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\reducers\\auth.js",["111"],"import {\r\n  REGISTER_FAIL,\r\n  REGISTER_SUCCESS,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload,\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n    case AUTH_ERROR:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\components\\dashboard\\Dashboard.js",["112"],"import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport DashboardActions from './DashboardAction';\r\nimport { getCurrentProfile } from '../../actions/profile';\r\n\r\nconst Dashboard = ({\r\n  getCurrentProfile,\r\n  auth: { user },\r\n  profile: { profile, loading }\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, []);\r\n\r\n  return loading && profile === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Dashboard</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user' />\r\n        Welcome {user && user.name}\r\n      </p>\r\n      {profile !== null ? (\r\n        <Fragment>\r\n          <DashboardActions />\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <p>You have not yet setup a profile, please add some info</p>\r\n          <Link to='/create-profile' className='btn btn-primary my1'>\r\n            Create profile\r\n          </Link>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile })(Dashboard);\r\n","C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\reducers\\profile.js",["113"],"import { GET_PROFILE, PROFILE_ERROR, CLEAR_PROFILE } from '../actions/types';\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: [],\r\n  repos: [],\r\n  loading: true,\r\n  error: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false\r\n      };\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        repos: [],\r\n        loadin: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\actions\\profile.js",[],"C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\components\\layout\\Spinner.js",[],"C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\components\\dashboard\\DashboardAction.js",[],"C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\components\\profile-forms\\EditProfile.js",["114"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    youtube: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    instagram: ''\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n\r\n    setFormData({\r\n      company: loading || !profile.company ? '' : profile.company,\r\n      website: loading || !profile.website ? '' : profile.website,\r\n      location: loading || !profile.location ? '' : profile.location,\r\n      status: loading || !profile.status ? '' : profile.status,\r\n      skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n      githubusername:\r\n        loading || !profile.githubusername ? '' : profile.githubusername,\r\n      bio: loading || !profile.bio ? '' : profile.bio,\r\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n      instagram: loading || !profile.social ? '' : profile.social.instagram\r\n    });\r\n  }, [loading]);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    youtube,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    instagram\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Edit Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' value='Submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  withRouter(EditProfile)\r\n);\r\n","C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\components\\profile-forms\\AddExperience.js",[],"C:\\Users\\Das\\Documents\\GitHub\\react-test\\client\\src\\components\\profile-forms\\AddEducation.js",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":5,"column":1,"nodeType":"121","endLine":16,"endColumn":2},{"ruleId":"119","severity":1,"message":"120","line":18,"column":1,"nodeType":"121","endLine":52,"endColumn":2},{"ruleId":"122","severity":1,"message":"123","line":16,"column":6,"nodeType":"124","endLine":16,"endColumn":8,"suggestions":"125"},{"ruleId":"119","severity":1,"message":"120","line":11,"column":1,"nodeType":"121","endLine":37,"endColumn":2},{"ruleId":"122","severity":1,"message":"126","line":48,"column":6,"nodeType":"124","endLine":48,"endColumn":15,"suggestions":"127"},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["130"],"React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["131"],"no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"136","text":"137"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"138","text":"139"},[484,486],"[getCurrentProfile]",[1697,1706],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]"]